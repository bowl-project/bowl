
"parsing ..." println
"define a b c" tokens parse


get-dictionary
split-at-semicolon
"rot if" tokens
"rot if" tokens
"dup head rot swap prepend swap tail split-at-semicolon" tokens prepend
"tail" tokens prepend
"dup head quote ; equals" tokens concatenate
prepend
nil prepend
"dup nil equals" tokens concatenate
reverse
put
set-dictionary

get-dictionary
define
"invoke swap 23 split swap drop rot swap nil swap split-at-semicolon rot rot reverse dup head swap tail reverse put rot rot swap continue" tokens reverse
put
set-dictionary

define include invoke swap 15 split swap drop dup head swap tail swap read tokens concatenate swap continue ;

include "assets/math.lime"
include "assets/list.lime"

2 3 mul 5 mul factorial

show println
